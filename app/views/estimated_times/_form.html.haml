= hidden_field_tag :current_date, params[:current_date]

- if @estimated_time.errors[:plan_on].include?(l(:taken, scope: 'activerecord.errors.messages'))
  %div{class: "conflict"}
    = l(:label_estimated_time_for_this_date_exists)
    - issue = @estimated_time.issue
    - es = EstimatedTime.where(user_id: User.current.id, issue_id: issue.try(:id), plan_on: params[:estimated_time].try('[]', :plan_on)).first
    %div{class: "conflict-details"}
      %ul
        %li= link_to(l(:label_edit_existing_estimated_time), {:controller => :estimated_times, :action => :edit, :id => es.try(:id) }) if es
        %li= link_to(l(:label_overwrite_existing_estimated_time), {:controller => :estimated_times, :action => :update, :id => es.try(:id), :estimated_time => params[:estimated_time]}, :method => :put) if es
        %li= link_to(l(:label_go_back_to_planning), {:action => :index})
- else
  = error_messages_for @estimated_time

.box.tabular
  = f.hidden_field :user_id, :value => User.current.id
  %p
    = f.select :issue_id, @assigned_issues.sort_by(&:id).map{ |i| [h("#{i.tracker.name} ##{i.id}: #{i.subject}"), i.id] }, :include_blank => true, :required => true
  %p
    = f.text_field :plan_on, :size => 10, :required => true
    = calendar_for('estimated_time_plan_on')
  %p
    = f.text_field :hours, :size => 6, :required => true
  %p
    = f.text_field :comments, :size => 100, :required => true
